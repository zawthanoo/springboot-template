name: Deployment

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  dockr-build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      
      - name: Extract Maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: pom-version
  
      - name: Bild tag version
        run: echo ::set-output name=version::$(echo ${{ steps.pom-version.outputs.version }}-${{github.run_number}}-${GITHUB_SHA::7})
        id: tag-version
  
      # - name: Maven build
      #   run: mvn clean install
              
      # - name: Login to ghcr.io
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.MY_GITHUB_TOKEN }}        
          
      # - name: Build and Push Image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: true
      #     tags: ghcr.io/zawthanoo/springboot-template:${{ steps.tag-version.outputs.version }}
      - name: Checkout Target Repository
        uses: actions/checkout@v3
        with:
          repository: argocd-apps/springboot-template
          path: infrastructure
          token: ${{ secrets.MY_GITHUB_TOKEN }} 

      - name: Edit customize chart
        uses: fjogeleit/yaml-update-action@main
        env:
          GIT_USER: ${{ github.actor }}
          GIT_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}         
          NEW_DOCKER_IMAGE: ghcr.io/zawthanoo/springboot-template:${{ steps.tag-version.outputs.version }}
        with:
          envs: GIT_USER, GIT_TOKEN, NEW_DOCKER_IMAGE
          repository: zawthanoo/argocd-apps
          valueFile: '/springboot-template/overlays/uat/kustomization.yaml'
          branch: main
          # targetBranch: main <-- for pull request
          # createPR: 'true' <-- for pull request
          # title: 'Version Updates' <-- for pull request
          # description: 'Test GitHub Action' <-- for pull request
          message: 'Update lasted docker image version'
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          workDir: infrastructure
          changes: |
            {
              "images.[0].newTag": "${NEW_DOCKER_IMAGE}"
            }    
      # - name: Deploy
      #   uses: appleboy/ssh-action@v1.0.0
      #   env:
      #     GIT_USER: ${{ github.actor }}
      #     GIT_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}        
      #     NEW_DOCKER_IMAGE: ghcr.io/zawthanoo/springboot-template:${{ steps.tag-version.outputs.version }}
      #   with:
      #     host: ${{ secrets.AWS_K8S_HOSTNAME }}
      #     username: ${{ secrets.AWS_K8S_USER_NAME }}
      #     key: ${{ secrets.AWS_PRIVATE_KEY }}      
      #     envs: GIT_USER, GIT_TOKEN, NEW_DOCKER_IMAGE
      #     script: |
      #       echo "New docker image $NEW_DOCKER_IMAGE"
      #       rm -rf springboot-template-deployment
      #       git clone https://$GIT_USER:$GIT_TOKEN@github.com/zawthanoo/springboot-template-deployment.git
      #       cd springboot-template-deployment
      #       yq eval ".spec.template.spec.containers.[0].image = \"${NEW_DOCKER_IMAGE}\"" -i deployment.yaml
      #       kubectl apply -f config.yaml -n sit
      #       kubectl apply -f secret.yaml -n sit
      #       kubectl apply -f deployment.yaml -n sit
      #       kubectl apply -f service.yaml -n sit
