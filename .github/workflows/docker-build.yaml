name: Docker image build & push

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  dockr-build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      
      - name: Extract Maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: pom-version
  
      - name: Bild tag version
        run: echo ::set-output name=version::$(echo ${{ steps.pom-version.outputs.version }}-${{github.run_number}}-${GITHUB_SHA::7})
        id: tag-version
  
      - name: Maven build
        run: mvn clean install
              
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.MY_GITHUB_TOKEN }}        
          
      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/zawthanoo/spring-rest-helloworld:${{ steps.tag-version.outputs.version }}
          
      - name: Checkout Kustomize chart Repository
        uses: actions/checkout@v3
        with:
          repository: zawthanoo/argocd-apps
          path: temp_workspace
          token: ${{ secrets.MY_GITHUB_TOKEN }} 

      - name: Updated lasted docker version
        uses: fjogeleit/yaml-update-action@main
        with:
          repository: zawthanoo/argocd-apps
          valueFile: 'spring-rest-helloworld/overlays/uat/kustomization.yaml'
          branch: main
          createPR: 'false'
          # targetBranch: main <-- for pull request          
          # title: 'Version Updates' <-- for pull request
          # description: 'Test GitHub Action' <-- for pull request
          message: 'Update lasted docker image version'
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          workDir: temp_workspace
          changes: |
            {
              "images[0].newTag": "${{ steps.tag-version.outputs.version }}"
            }
